
Traffic Light System 1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000037c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  0000037c  000003f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003fa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000042c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000468  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d0f  00000000  00000000  00000548  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000075d  00000000  00000000  00001257  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000724  00000000  00000000  000019b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000160  00000000  00000000  000020d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004b1  00000000  00000000  00002238  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006bd  00000000  00000000  000026e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00002da6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e7       	ldi	r30, 0x7C	; 124
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 4d 01 	call	0x29a	; 0x29a <main>
  7a:	0c 94 bc 01 	jmp	0x378	; 0x378 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_setPinDirection>:
		case 2: //PORTC
		SET_BIT(PORTC, PinId);
		break;

		case 3: //PORTD
		SET_BIT(PORTD, PinId);
  82:	81 30       	cpi	r24, 0x01	; 1
  84:	01 f1       	breq	.+64     	; 0xc6 <DIO_setPinDirection+0x44>
  86:	30 f0       	brcs	.+12     	; 0x94 <DIO_setPinDirection+0x12>
  88:	82 30       	cpi	r24, 0x02	; 2
  8a:	b1 f1       	breq	.+108    	; 0xf8 <DIO_setPinDirection+0x76>
  8c:	83 30       	cpi	r24, 0x03	; 3
  8e:	09 f4       	brne	.+2      	; 0x92 <DIO_setPinDirection+0x10>
  90:	4c c0       	rjmp	.+152    	; 0x12a <DIO_setPinDirection+0xa8>
  92:	08 95       	ret
  94:	41 30       	cpi	r20, 0x01	; 1
  96:	59 f4       	brne	.+22     	; 0xae <DIO_setPinDirection+0x2c>
  98:	2a b3       	in	r18, 0x1a	; 26
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <DIO_setPinDirection+0x22>
  a0:	88 0f       	add	r24, r24
  a2:	99 1f       	adc	r25, r25
  a4:	6a 95       	dec	r22
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <DIO_setPinDirection+0x1e>
  a8:	82 2b       	or	r24, r18
  aa:	8a bb       	out	0x1a, r24	; 26
  ac:	08 95       	ret
  ae:	2a b3       	in	r18, 0x1a	; 26
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	02 c0       	rjmp	.+4      	; 0xba <DIO_setPinDirection+0x38>
  b6:	88 0f       	add	r24, r24
  b8:	99 1f       	adc	r25, r25
  ba:	6a 95       	dec	r22
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <DIO_setPinDirection+0x34>
  be:	80 95       	com	r24
  c0:	82 23       	and	r24, r18
  c2:	8a bb       	out	0x1a, r24	; 26
  c4:	08 95       	ret
  c6:	41 30       	cpi	r20, 0x01	; 1
  c8:	59 f4       	brne	.+22     	; 0xe0 <DIO_setPinDirection+0x5e>
  ca:	27 b3       	in	r18, 0x17	; 23
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <DIO_setPinDirection+0x54>
  d2:	88 0f       	add	r24, r24
  d4:	99 1f       	adc	r25, r25
  d6:	6a 95       	dec	r22
  d8:	e2 f7       	brpl	.-8      	; 0xd2 <DIO_setPinDirection+0x50>
  da:	82 2b       	or	r24, r18
  dc:	87 bb       	out	0x17, r24	; 23
  de:	08 95       	ret
  e0:	27 b3       	in	r18, 0x17	; 23
  e2:	81 e0       	ldi	r24, 0x01	; 1
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	02 c0       	rjmp	.+4      	; 0xec <DIO_setPinDirection+0x6a>
  e8:	88 0f       	add	r24, r24
  ea:	99 1f       	adc	r25, r25
  ec:	6a 95       	dec	r22
  ee:	e2 f7       	brpl	.-8      	; 0xe8 <DIO_setPinDirection+0x66>
  f0:	80 95       	com	r24
  f2:	82 23       	and	r24, r18
  f4:	87 bb       	out	0x17, r24	; 23
  f6:	08 95       	ret
  f8:	41 30       	cpi	r20, 0x01	; 1
  fa:	59 f4       	brne	.+22     	; 0x112 <DIO_setPinDirection+0x90>
  fc:	24 b3       	in	r18, 0x14	; 20
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	02 c0       	rjmp	.+4      	; 0x108 <DIO_setPinDirection+0x86>
 104:	88 0f       	add	r24, r24
 106:	99 1f       	adc	r25, r25
 108:	6a 95       	dec	r22
 10a:	e2 f7       	brpl	.-8      	; 0x104 <DIO_setPinDirection+0x82>
 10c:	82 2b       	or	r24, r18
 10e:	84 bb       	out	0x14, r24	; 20
 110:	08 95       	ret
 112:	24 b3       	in	r18, 0x14	; 20
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 c0       	rjmp	.+4      	; 0x11e <DIO_setPinDirection+0x9c>
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	6a 95       	dec	r22
 120:	e2 f7       	brpl	.-8      	; 0x11a <DIO_setPinDirection+0x98>
 122:	80 95       	com	r24
 124:	82 23       	and	r24, r18
 126:	84 bb       	out	0x14, r24	; 20
 128:	08 95       	ret
 12a:	41 30       	cpi	r20, 0x01	; 1
 12c:	59 f4       	brne	.+22     	; 0x144 <DIO_setPinDirection+0xc2>
 12e:	21 b3       	in	r18, 0x11	; 17
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_setPinDirection+0xb8>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_setPinDirection+0xb4>
 13e:	82 2b       	or	r24, r18
 140:	81 bb       	out	0x11, r24	; 17
 142:	08 95       	ret
 144:	21 b3       	in	r18, 0x11	; 17
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	02 c0       	rjmp	.+4      	; 0x150 <DIO_setPinDirection+0xce>
 14c:	88 0f       	add	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	6a 95       	dec	r22
 152:	e2 f7       	brpl	.-8      	; 0x14c <DIO_setPinDirection+0xca>
 154:	80 95       	com	r24
 156:	82 23       	and	r24, r18
 158:	81 bb       	out	0x11, r24	; 17
 15a:	08 95       	ret

0000015c <DIO_setPinValue>:
 15c:	81 11       	cpse	r24, r1
 15e:	1a c0       	rjmp	.+52     	; 0x194 <DIO_setPinValue+0x38>
 160:	41 30       	cpi	r20, 0x01	; 1
 162:	61 f4       	brne	.+24     	; 0x17c <DIO_setPinValue+0x20>
 164:	9b b3       	in	r25, 0x1b	; 27
 166:	21 e0       	ldi	r18, 0x01	; 1
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	06 2e       	mov	r0, r22
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_setPinValue+0x16>
 16e:	22 0f       	add	r18, r18
 170:	33 1f       	adc	r19, r19
 172:	0a 94       	dec	r0
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_setPinValue+0x12>
 176:	29 2b       	or	r18, r25
 178:	2b bb       	out	0x1b, r18	; 27
 17a:	0c c0       	rjmp	.+24     	; 0x194 <DIO_setPinValue+0x38>
 17c:	9b b3       	in	r25, 0x1b	; 27
 17e:	21 e0       	ldi	r18, 0x01	; 1
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	06 2e       	mov	r0, r22
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_setPinValue+0x2e>
 186:	22 0f       	add	r18, r18
 188:	33 1f       	adc	r19, r19
 18a:	0a 94       	dec	r0
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_setPinValue+0x2a>
 18e:	20 95       	com	r18
 190:	29 23       	and	r18, r25
 192:	2b bb       	out	0x1b, r18	; 27
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	d1 f4       	brne	.+52     	; 0x1cc <DIO_setPinValue+0x70>
 198:	41 30       	cpi	r20, 0x01	; 1
 19a:	61 f4       	brne	.+24     	; 0x1b4 <DIO_setPinValue+0x58>
 19c:	98 b3       	in	r25, 0x18	; 24
 19e:	21 e0       	ldi	r18, 0x01	; 1
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	06 2e       	mov	r0, r22
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_setPinValue+0x4e>
 1a6:	22 0f       	add	r18, r18
 1a8:	33 1f       	adc	r19, r19
 1aa:	0a 94       	dec	r0
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_setPinValue+0x4a>
 1ae:	29 2b       	or	r18, r25
 1b0:	28 bb       	out	0x18, r18	; 24
 1b2:	0c c0       	rjmp	.+24     	; 0x1cc <DIO_setPinValue+0x70>
 1b4:	98 b3       	in	r25, 0x18	; 24
 1b6:	21 e0       	ldi	r18, 0x01	; 1
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	06 2e       	mov	r0, r22
 1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <DIO_setPinValue+0x66>
 1be:	22 0f       	add	r18, r18
 1c0:	33 1f       	adc	r19, r19
 1c2:	0a 94       	dec	r0
 1c4:	e2 f7       	brpl	.-8      	; 0x1be <DIO_setPinValue+0x62>
 1c6:	20 95       	com	r18
 1c8:	29 23       	and	r18, r25
 1ca:	28 bb       	out	0x18, r18	; 24
 1cc:	82 30       	cpi	r24, 0x02	; 2
 1ce:	d1 f4       	brne	.+52     	; 0x204 <DIO_setPinValue+0xa8>
 1d0:	41 30       	cpi	r20, 0x01	; 1
 1d2:	61 f4       	brne	.+24     	; 0x1ec <DIO_setPinValue+0x90>
 1d4:	95 b3       	in	r25, 0x15	; 21
 1d6:	21 e0       	ldi	r18, 0x01	; 1
 1d8:	30 e0       	ldi	r19, 0x00	; 0
 1da:	06 2e       	mov	r0, r22
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_setPinValue+0x86>
 1de:	22 0f       	add	r18, r18
 1e0:	33 1f       	adc	r19, r19
 1e2:	0a 94       	dec	r0
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_setPinValue+0x82>
 1e6:	29 2b       	or	r18, r25
 1e8:	25 bb       	out	0x15, r18	; 21
 1ea:	0c c0       	rjmp	.+24     	; 0x204 <DIO_setPinValue+0xa8>
 1ec:	95 b3       	in	r25, 0x15	; 21
 1ee:	21 e0       	ldi	r18, 0x01	; 1
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	06 2e       	mov	r0, r22
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <DIO_setPinValue+0x9e>
 1f6:	22 0f       	add	r18, r18
 1f8:	33 1f       	adc	r19, r19
 1fa:	0a 94       	dec	r0
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <DIO_setPinValue+0x9a>
 1fe:	20 95       	com	r18
 200:	29 23       	and	r18, r25
 202:	25 bb       	out	0x15, r18	; 21
 204:	83 30       	cpi	r24, 0x03	; 3
 206:	c1 f4       	brne	.+48     	; 0x238 <DIO_setPinValue+0xdc>
 208:	41 30       	cpi	r20, 0x01	; 1
 20a:	59 f4       	brne	.+22     	; 0x222 <DIO_setPinValue+0xc6>
 20c:	22 b3       	in	r18, 0x12	; 18
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	02 c0       	rjmp	.+4      	; 0x218 <DIO_setPinValue+0xbc>
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	6a 95       	dec	r22
 21a:	e2 f7       	brpl	.-8      	; 0x214 <DIO_setPinValue+0xb8>
 21c:	82 2b       	or	r24, r18
 21e:	82 bb       	out	0x12, r24	; 18
 220:	08 95       	ret
 222:	22 b3       	in	r18, 0x12	; 18
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_setPinValue+0xd2>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	6a 95       	dec	r22
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_setPinValue+0xce>
 232:	80 95       	com	r24
 234:	82 23       	and	r24, r18
 236:	82 bb       	out	0x12, r24	; 18
 238:	08 95       	ret

0000023a <DIO_setPortDirection>:

                /* PORT APIS */

void DIO_setPortDirection(u8 PortId, u8 PortDirection)
{
	switch(PortId)
 23a:	81 30       	cpi	r24, 0x01	; 1
 23c:	69 f0       	breq	.+26     	; 0x258 <DIO_setPortDirection+0x1e>
 23e:	28 f0       	brcs	.+10     	; 0x24a <DIO_setPortDirection+0x10>
 240:	82 30       	cpi	r24, 0x02	; 2
 242:	89 f0       	breq	.+34     	; 0x266 <DIO_setPortDirection+0x2c>
 244:	83 30       	cpi	r24, 0x03	; 3
 246:	b1 f0       	breq	.+44     	; 0x274 <DIO_setPortDirection+0x3a>
 248:	08 95       	ret
    {
		case DIO_PORTA:
		if(DIO_PORT_OUTPUT == PortDirection)
 24a:	6f 3f       	cpi	r22, 0xFF	; 255
 24c:	19 f4       	brne	.+6      	; 0x254 <DIO_setPortDirection+0x1a>
		{
			DDRA = 0xff;  //0b11111111
 24e:	8f ef       	ldi	r24, 0xFF	; 255
 250:	8a bb       	out	0x1a, r24	; 26
 252:	08 95       	ret
		}
		else
		{
			DDRA = 0x00;  //0b00000000
 254:	1a ba       	out	0x1a, r1	; 26
 256:	08 95       	ret
		}
        break;

        case DIO_PORTB:
        if(DIO_PORT_OUTPUT == PortDirection)
 258:	6f 3f       	cpi	r22, 0xFF	; 255
 25a:	19 f4       	brne	.+6      	; 0x262 <DIO_setPortDirection+0x28>
		{
			DDRB = 0xff;  //0b11111111
 25c:	8f ef       	ldi	r24, 0xFF	; 255
 25e:	87 bb       	out	0x17, r24	; 23
 260:	08 95       	ret
		}
		else
		{
			DDRB = 0x00;  //0b00000000
 262:	17 ba       	out	0x17, r1	; 23
 264:	08 95       	ret
		}
        break;

		case DIO_PORTC:  //PORTC
		if(DIO_PORT_OUTPUT == PortDirection)
 266:	6f 3f       	cpi	r22, 0xFF	; 255
 268:	19 f4       	brne	.+6      	; 0x270 <DIO_setPortDirection+0x36>
		{
			DDRC = 0xff;  //0b11111111
 26a:	8f ef       	ldi	r24, 0xFF	; 255
 26c:	84 bb       	out	0x14, r24	; 20
 26e:	08 95       	ret
		}
		else
		{
			DDRC = 0x00;  //0b00000000
 270:	14 ba       	out	0x14, r1	; 20
 272:	08 95       	ret
		}
        break;

		case DIO_PORTD:  //PORTD
		if(DIO_PORT_OUTPUT == PortDirection)
 274:	6f 3f       	cpi	r22, 0xFF	; 255
 276:	19 f4       	brne	.+6      	; 0x27e <DIO_setPortDirection+0x44>
		{
			DDRD = 0xff;  //0b11111111
 278:	8f ef       	ldi	r24, 0xFF	; 255
 27a:	81 bb       	out	0x11, r24	; 17
 27c:	08 95       	ret
		}
		else
		{
			DDRD = 0x00;  //0b00000000
 27e:	11 ba       	out	0x11, r1	; 17
 280:	08 95       	ret

00000282 <LED_init>:
 /* HAL */
 #include "LED_interface.h"
 
void LED_init(u8 PortId, u8 PinId)
{
	DIO_setPinDirection(PortId, PinId, DIO_PIN_OUTPUT);
 282:	41 e0       	ldi	r20, 0x01	; 1
 284:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setPinDirection>
 288:	08 95       	ret

0000028a <LED_on>:
}


void LED_on(u8 PortId, u8 PinId)
{
	DIO_setPinValue(PortId, PinId, DIO_PIN_HIGH);
 28a:	41 e0       	ldi	r20, 0x01	; 1
 28c:	0e 94 ae 00 	call	0x15c	; 0x15c <DIO_setPinValue>
 290:	08 95       	ret

00000292 <LED_off>:
}

void LED_off(u8 PortId, u8 PinId)
{
	DIO_setPinValue(PortId, PinId, DIO_PIN_LOW);
 292:	40 e0       	ldi	r20, 0x00	; 0
 294:	0e 94 ae 00 	call	0x15c	; 0x15c <DIO_setPinValue>
 298:	08 95       	ret

0000029a <main>:
#include "SEG7_config.h"


int main(void)
{
	DIO_setPortDirection(PORTC, DIO_PORT_OUTPUT);
 29a:	85 b3       	in	r24, 0x15	; 21
 29c:	6f ef       	ldi	r22, 0xFF	; 255
 29e:	0e 94 1d 01 	call	0x23a	; 0x23a <DIO_setPortDirection>
	LED_init(DIO_PORTA,DIO_PIN1);
 2a2:	61 e0       	ldi	r22, 0x01	; 1
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	0e 94 41 01 	call	0x282	; 0x282 <LED_init>
	LED_init(DIO_PORTA,DIO_PIN2);
 2aa:	62 e0       	ldi	r22, 0x02	; 2
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	0e 94 41 01 	call	0x282	; 0x282 <LED_init>
	LED_init(DIO_PORTA,DIO_PIN3);
 2b2:	63 e0       	ldi	r22, 0x03	; 3
 2b4:	80 e0       	ldi	r24, 0x00	; 0
 2b6:	0e 94 41 01 	call	0x282	; 0x282 <LED_init>
	
	/* Replace with your application code */
	while (1)
	{
		SEG7_displaySingleNumber(1);
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	0e 94 96 01 	call	0x32c	; 0x32c <SEG7_displaySingleNumber>
		// RED
		LED_on      (DIO_PORTA,DIO_PIN1);
 2c0:	61 e0       	ldi	r22, 0x01	; 1
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	0e 94 45 01 	call	0x28a	; 0x28a <LED_on>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2c8:	2f ef       	ldi	r18, 0xFF	; 255
 2ca:	3c e2       	ldi	r19, 0x2C	; 44
 2cc:	81 e3       	ldi	r24, 0x31	; 49
 2ce:	91 e0       	ldi	r25, 0x01	; 1
 2d0:	21 50       	subi	r18, 0x01	; 1
 2d2:	30 40       	sbci	r19, 0x00	; 0
 2d4:	80 40       	sbci	r24, 0x00	; 0
 2d6:	90 40       	sbci	r25, 0x00	; 0
 2d8:	d9 f7       	brne	.-10     	; 0x2d0 <main+0x36>
 2da:	00 c0       	rjmp	.+0      	; 0x2dc <main+0x42>
 2dc:	00 00       	nop
		_delay_ms(15000);
		
		LED_off     (DIO_PORTA,DIO_PIN1);
 2de:	61 e0       	ldi	r22, 0x01	; 1
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	0e 94 49 01 	call	0x292	; 0x292 <LED_off>
		// YELLOW
		LED_on      (DIO_PORTA,DIO_PIN2);
 2e6:	62 e0       	ldi	r22, 0x02	; 2
 2e8:	80 e0       	ldi	r24, 0x00	; 0
 2ea:	0e 94 45 01 	call	0x28a	; 0x28a <LED_on>
 2ee:	2f ef       	ldi	r18, 0xFF	; 255
 2f0:	31 e1       	ldi	r19, 0x11	; 17
 2f2:	8a e7       	ldi	r24, 0x7A	; 122
 2f4:	21 50       	subi	r18, 0x01	; 1
 2f6:	30 40       	sbci	r19, 0x00	; 0
 2f8:	80 40       	sbci	r24, 0x00	; 0
 2fa:	e1 f7       	brne	.-8      	; 0x2f4 <main+0x5a>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <main+0x64>
 2fe:	00 00       	nop
		_delay_ms(5000);
		LED_off     (DIO_PORTA,DIO_PIN2);
 300:	62 e0       	ldi	r22, 0x02	; 2
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	0e 94 49 01 	call	0x292	; 0x292 <LED_off>
		// GREEN
		LED_on      (DIO_PORTA,DIO_PIN3);
 308:	63 e0       	ldi	r22, 0x03	; 3
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	0e 94 45 01 	call	0x28a	; 0x28a <LED_on>
 310:	9f ef       	ldi	r25, 0xFF	; 255
 312:	23 e2       	ldi	r18, 0x23	; 35
 314:	34 ef       	ldi	r19, 0xF4	; 244
 316:	91 50       	subi	r25, 0x01	; 1
 318:	20 40       	sbci	r18, 0x00	; 0
 31a:	30 40       	sbci	r19, 0x00	; 0
 31c:	e1 f7       	brne	.-8      	; 0x316 <main+0x7c>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <main+0x86>
 320:	00 00       	nop
		_delay_ms(10000);
		LED_off     (DIO_PORTA,DIO_PIN3);
 322:	63 e0       	ldi	r22, 0x03	; 3
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	0e 94 49 01 	call	0x292	; 0x292 <LED_off>
 32a:	c7 cf       	rjmp	.-114    	; 0x2ba <main+0x20>

0000032c <SEG7_displaySingleNumber>:
#include "SEG7_config.h"



void SEG7_displaySingleNumber(u8 Number)
{
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	cd b7       	in	r28, 0x3d	; 61
 332:	de b7       	in	r29, 0x3e	; 62
 334:	2a 97       	sbiw	r28, 0x0a	; 10
 336:	0f b6       	in	r0, 0x3f	; 63
 338:	f8 94       	cli
 33a:	de bf       	out	0x3e, r29	; 62
 33c:	0f be       	out	0x3f, r0	; 63
 33e:	cd bf       	out	0x3d, r28	; 61
    u8 SegmentEncoding[10] = {
 340:	9a e0       	ldi	r25, 0x0A	; 10
 342:	e0 e6       	ldi	r30, 0x60	; 96
 344:	f0 e0       	ldi	r31, 0x00	; 0
 346:	de 01       	movw	r26, r28
 348:	11 96       	adiw	r26, 0x01	; 1
 34a:	01 90       	ld	r0, Z+
 34c:	0d 92       	st	X+, r0
 34e:	9a 95       	dec	r25
 350:	e1 f7       	brne	.-8      	; 0x34a <SEG7_displaySingleNumber+0x1e>
        0b00000111, // 7
        0b01111111, // 8
        0b01101111  // 9
    };

    if(Number <= 9)
 352:	8a 30       	cpi	r24, 0x0A	; 10
 354:	40 f4       	brcc	.+16     	; 0x366 <SEG7_displaySingleNumber+0x3a>
    {
        PORTNUM = SegmentEncoding[Number];
 356:	e1 e0       	ldi	r30, 0x01	; 1
 358:	f0 e0       	ldi	r31, 0x00	; 0
 35a:	ec 0f       	add	r30, r28
 35c:	fd 1f       	adc	r31, r29
 35e:	e8 0f       	add	r30, r24
 360:	f1 1d       	adc	r31, r1
 362:	80 81       	ld	r24, Z
 364:	85 bb       	out	0x15, r24	; 21
    }
}
 366:	2a 96       	adiw	r28, 0x0a	; 10
 368:	0f b6       	in	r0, 0x3f	; 63
 36a:	f8 94       	cli
 36c:	de bf       	out	0x3e, r29	; 62
 36e:	0f be       	out	0x3f, r0	; 63
 370:	cd bf       	out	0x3d, r28	; 61
 372:	df 91       	pop	r29
 374:	cf 91       	pop	r28
 376:	08 95       	ret

00000378 <_exit>:
 378:	f8 94       	cli

0000037a <__stop_program>:
 37a:	ff cf       	rjmp	.-2      	; 0x37a <__stop_program>
